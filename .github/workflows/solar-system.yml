name: Solar System Workflow

env:
  MONGO_URI: ‘mongodb://localhost:27017/superData'
  MONGO_USERNAME: non-prd-user
  MONGO_PASSWORD: non-prod-password

permissions: #added
    packages: write #added

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
    
jobs:
    unit-testing:
        name: Unit Testing
        services:
          mongo-db:
            image: sidmanish18/mongo-db:non-prod
            ports:
              - 27017:27017
        env:
          MONGO_URI: ‘mongodb://127.0.0.1:27017/superData'
          MONGO_USERNAME: non-prd-user
          MONGO_PASSWORD: non-prod-password
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        # - name: Setup NodeJS Version
        #   uses: actions/setup-node@v3
        #   with:
        #     node-version: 20
        
        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'

    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
        name: code-coverage
        container:
            image: node:18
        services:
          mongo-db:
            image: sidmanish18/mongo-db:non-prod
            options: 
              -- name mongo
        env:
            MONGO_URI: ‘mongodb://mongo:27017/superData'
            MONGO_USERNAME: non-prd-user
            MONGO_PASSWORD: non-prod-password
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4

          # - name: Setup NodeJS Version
          #   uses: actions/setup-node@v3
          #   with:
          #     node-version: 20
      
          - name: Install Dependencies
            run: npm install

          - name: code-coverage
            run: npm run coverage
            continue-on-error: true

          - name: Code-Coverage-Result
            uses: actions/upload-artifact@v3
            with:
              name: Code-Coverage-Result
              path: coverage
              retention-days: 5

    docker:
      runs-on: ubuntu-latest
      needs:
        - code-coverage
      steps:
        - uses: actions/checkout@v4
        - uses: docker/login-action@v2.2.0
          with:
            registry: ghcr.io
            username: '${{ github.repository_owner }}'
            password: '${{ secrets.GITHUB_TOKEN }}'

        - uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: 'ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}'

    dev-deploy:
        needs: docker
        runs-on: ubuntu-latest
        steps:
          - name: setup kubernetes
            uses: azure/setup-kubectl@v3
            with:
              version: 'v1.26.0'
          - name: set kubernetes context
            uses: azure/k8s-set-context@v3
            with:
              method: kubeconfig
              kubeconfig: '${{ secrets.KUBECONFIG }}'
          - run: kubectl version --short -o yaml
                    
        
